+========================================================+           +========================================================+
|                     owners table                       |           |                       pets table                       |
+====+====================================+=====+========+           +====+====================================+=====+========+
| ID |                Name                | Age | Pet_ID |           | ID |                Name                | Age | Animal |
+----+------------------------------------+-----+--------+           +----+------------------------------------+-----+--------+
| 1  |              Aubrey Little         |  20 |    1   |           | 1  |         Dr. Harris Bonkers         |  1  | Rabbit |
+----+------------------------------------+-----+--------+           +----+------------------------------------+-----+--------+
| 2  |            Chett Crawfish          |  45 |    3   |           | 2  |                Moon                |  45 |  Dog   |
+----+------------------------------------+-----+--------+           +----+------------------------------------+-----+--------+
| 3  |             Jules Spinner          |  10 |    4   |           | 3  |                Ripley              |  10 |  Cat   |
+----+------------------------------------+-----+--------+           +----+------------------------------------+-----+--------+
| 4  |         Magnus Burnsides           |  9  |    2   |           | 4  |                 Tom                |  9  |  Cat   |
+----+------------------------------------+-----+--------+           +----+------------------------------------+-----+--------+
| 5  |             Veronica Dunn          |  9  |   NULL |           | 5  |                Maisie              |  9  |   Dog  |
+----+------------------------------------+-----+--------+           +----+------------------------------------+-----+--------+


Каждая строка таблицы owners определяет разных владельцев животных, когда столбец ID это уникальный идентификатор.
Столбец Pet_ID (в таблице owners) содержит ID животных которые пренадлежат своим хозяевам.

Например
- таблица pets показывает что Dr.Harris Bonkers это животное с ID 1
- таблица owners показывает что Aubrey Little владеет животным с ID 1

Совмещая два этих факта, Dr. Harris Bonkers это петомец Aubrey Little. В то время как Veronica Dunn не имеет соответствующего
Pet_ID, у нее нет животного. И, так как 5 не встречается в стобце Pet_ID, Maisie не имеет владельца.

JOINs
Вспомним что мы можем использовать INNER JOIN чтобы объединить обе таблицы, связывая по Pet_ID и ID в соответствующих таблицах.

query = """
        SELECT o.Name AS Owner_Name, p. Name AS Pet_Name
        FROM `bigquery-public-data.pet_records.owners` AS o
        INNER JOIN `bigquery-public-data.pet_records.pet` AS p
            ON p.ID = p.Pet_ID
        """

Результат будет следующий
+==================+===================+
|    Owner_Name    |      Pet_Name     |
+------------------+-------------------+
|   Aubrey Little  | Dr Harris Bonkers |
+------------------+-------------------+
| Magnus Burnsides |        Moon       |
+------------------+-------------------+
|  Chett Crawfish  |       Ripley      |
+------------------+-------------------+
|  Jules Spinner   |         Tom       |
+------------------+-------------------+

В данном случае Veronica Dunn и Maisie не включается в результат. Но что если мы хотим создать таблицу содержащую ВСЕХ животных,
независимо от того имеют ли они владельцев или нет. Или что если мы хотим скомбинировать все строки в обоих таблицах.
В данном случае мы хотим использовать другой вид JOIN

Например,  для того чтобы создать таблицу содержащую все строки с таблицы owners, мы используем LEFT JOIN. В данном случае,
'LEFT' указывает на то что таблица стоит перед JOIN в запросе. (Right же напротив к таблице ПОСЛЕ JOIN)

`bigquery-public-data.pet_records.owners` AS o INNER JOIN `bigquery-public-data.pet_records.pet` AS p.
            LEFT                                                        RIGHT 

Заместив INNER JOIN в запросе на LEFT JOIN вернет все строки где 2 таблицы имеют общие значения И ВСЕ строки левой таблицы

Если же мы заместим на RIGHT JOIN мы получим все общие строки и строки в RIGHT табилце.

В конце концов если мы заместим FULL JOIN это вернет нам строки из ОБОИХ таблиц.

                +===========+=======+===========+                         +===========+=======+===========+
                |           |-------|           |                         |-----------|-------|           |
                |           |-------|           |                         |-----------|-------|           |
                |           |-------|           |              LEFT JOIN  |-----------|-------|           |
    INNER JOIN  |           |-------|           |                         |-----------|-------|           |
                |           |-------|           |                         |-----------|-------|           |
                |           |-------|           |                         |-----------|-------|           |
                |           |-------|           |                         |-----------|-------|           |
                +===========+=======+===========+                         +===========+=======+===========+


        +==================+===================+                      +==================+===================+
        |    Owner_Name    |      Pet_Name     |                      |    Owner_Name    |      Pet_Name     |
        +------------------+-------------------+                      +------------------+-------------------+
        |   Aubrey Little  | Dr Harris Bonkers |                      |   Aubrey Little  | Dr Harris Bonkers |
        +------------------+-------------------+                      +------------------+-------------------+
        | Magnus Burnsides |        Moon       |                      | Magnus Burnsides |        Moon       |
        +------------------+-------------------+                      +------------------+-------------------+
        |  Chett Crawfish  |       Ripley      |                      |  Chett Crawfish  |       Ripley      |
        +------------------+-------------------+                      +------------------+-------------------+
        |  Jules Spinner   |         Tom       |                      |  Jules Spinner   |         Tom       |
        +------------------+-------------------+                      +------------------+-------------------+
                                                                      |   Veronica Dunn  |         NULL      |
                                                                      +------------------+-------------------+

                    +===========+=======+===========+
                    |           |-------|-----------|
                    |           |-------|-----------|
                    |           |-------|-----------|
        RIGHT JOIN  |           |-------|-----------|
                    |           |-------|-----------|
                    |           |-------|-----------|
                    |           |-------|-----------|
                    +===========+=======+===========+
            
            +==================+===================+
            |    Owner_Name    |      Pet_Name     |
            +------------------+-------------------+
            |   Aubrey Little  | Dr Harris Bonkers |
            +------------------+-------------------+
            | Magnus Burnsides |        Moon       |
            +------------------+-------------------+
            |  Chett Crawfish  |       Ripley      |
            +------------------+-------------------+
            |  Jules Spinner   |         Tom       |
            +------------------+-------------------+
            |   Veronica Dunn  |         NULL      |
            +------------------+-------------------+
            |       NULL       |       Maisie      |
            +------------------+-------------------+


UNION

Как вы могли заметть, JOIN горизонтальное скомбинировал результаты у обоих таблиц. Если вы вместо этого захотите вериткально 
соединить столбцы вы можете это сделать с помощью UNION. Пример запроса ниже комбинирует столбцы Age в обеих таблицах.

query = """
        SELECT Age FROM `bigquery-public-data.pet_records.pet`
        UNION ALL
        SELECT Age FROM `bigquery-public-data.pet_records.owners`
        """

Результат:
+=======+
|  Age  |
+-------+
|   20  |
+-------+
|   45  |
+-------+
|   10  |
+-------+
|   9   |
+-------+
|   8   |
+-------+
|   1   |
+-------+
|   9   |
+-------+
|   7   |
+-------+
|   2   |
+-------+
|   10  |
+-------+

Отметим что для использования UNION мы должны убедится что оба столбца должны быть с данными в одной и том же
типе данных.

UNION ALL используется чтобы в результат вошли даже одинаковые значения. Можно обратить внимание что значение 9 встречается
2 раза, так как оно присутствует в таблицах owners и в таблицах pets. Чтобы такого не было нужно использовать
вместо UNION ALL - UNION DISTINCT